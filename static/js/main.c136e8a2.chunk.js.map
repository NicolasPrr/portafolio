{"version":3,"sources":["components/DynamicTag.tsx","components/Icons.tsx","variables.tsx","components/AvatarContent.tsx","components/TimeLine.tsx","components/Card.tsx","components/Description.tsx","components/FiboImage/helpers.ts","components/FiboImage/index.tsx","components/List.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["tagColor","DynamicTag","props","data","useState","current","setCurrent","Object","keys","map","key","keyInt","parseInt","color","length","visible","title","type","frameworks","join","level","style","cursor","onClick","InfoCircleOutlined","name","IconFont","createFromIconfontCN","scriptUrl","University","fontSize","Certificate","Airplane","Job","Coding","Idiom","StyledIconURL","styled","Url","href","rel","target","StyledIconGit","GithubOutlined","Repo","StyledIconY","YoutubeOutlined","Youtube","idiomList","projectData","description","dates","src","url","libraries","youtube","repo","timeList","text","languageList","experience","Wrapper","div","Row","AvatarContent","size","Title","direction","align","Text","PhoneOutlined","Link","LinkedinOutlined","dashed","dict","airplane","certificate","finish","CheckOutlined","job","prize","TrophyOutlined","university","Item","Timeline","Time","mode","reverse","item","dot","WrapperIns","Card","children","Description","getRows","i","Math","floor","getColumns","fragmentString","ammount","strAcum","fibo","pow","lastOne","push","buildGrid","n","rows","columns","cssGrid","rCounter","strRow","strCol","row","column","Container","boxes","full","ItemImage","grid","useBreakpoint","Grid","ProjectList","allowInExtra","itemLayout","dataSource","renderItem","actions","padding","extra","Fragment","objectFit","height","Meta","orientation","lib","Content","Layout","Header","App","background","boxShadow","xs","sm","md","List","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c136e8a2.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Tag, Tooltip } from 'antd'\r\n\r\nimport { TIdiom, TLanguage } from '../variables'\r\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\r\n\r\n\r\nconst tagColor = [\"pink\", \"red\", \"orange\", \"cyan\", \"green\", \"blue\", \"purple\", \"geekblue\", \"yellow\", \"magenta\", \"volcano\", \"gold\", \"lime\"];\r\n\r\nconst DynamicTag = (props: any) => {\r\n\r\n    const data: TLanguage[] & TIdiom[] = props.data\r\n\r\n    const [current, setCurrent] = useState<number>(-1)\r\n    return (\r\n        <>\r\n            {Object.keys(data).map((key) => {\r\n                const keyInt = parseInt(key)\r\n                const color = current === keyInt ? '#007991' : tagColor[keyInt % (tagColor.length - 1)]\r\n                return (\r\n                    <Tooltip visible={current === keyInt}\r\n                        key={key}\r\n                        title={ props.type === 'language' ?\r\n                            data[keyInt].frameworks.join(' | ') : data[keyInt].level}   >\r\n                        <Tag color={color} style={{ cursor: 'pointer' }}\r\n                            onClick={() => current === keyInt ? setCurrent(-1) : setCurrent(keyInt)}>\r\n                            <InfoCircleOutlined /> {data[keyInt].name}\r\n                        </Tag>\r\n                    </Tooltip>\r\n\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\nexport default DynamicTag","import React from 'react'\r\nimport { createFromIconfontCN, GithubOutlined, YoutubeOutlined } from \"@ant-design/icons\";\r\nimport { Tooltip } from 'antd'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst IconFont = createFromIconfontCN({\r\n    scriptUrl: [\r\n        '//at.alicdn.com/t/font_2142157_24nydt0969n.js'\r\n    ],\r\n});\r\nexport const University = () => (\r\n    <IconFont type='iconuniversity1'\r\n        style={{ fontSize: 20 }}\r\n    />\r\n)\r\nexport const Certificate = () => (\r\n    <IconFont type='iconcertificate'\r\n        style={{ fontSize: 20 }}\r\n    />\r\n)\r\nexport const Airplane = () => (\r\n    <IconFont type='iconairplane'\r\n        style={{ fontSize: 20 }}\r\n    />\r\n)\r\nexport const Programming = () => (\r\n    <IconFont type='iconprogramming'\r\n        style={{ fontSize: 20 }}\r\n    />\r\n)\r\nexport const Job = () => (\r\n    <IconFont type='iconjob1'\r\n        style={{ fontSize: 20 }}\r\n    />\r\n)\r\nexport const Coding = () => (\r\n    <IconFont type='iconprogramming2'\r\n        style={{ fontSize: 15 }}\r\n    />\r\n)\r\nexport const Idiom = () => (\r\n    <IconFont type='iconidiom'\r\n        style={{ fontSize: 15 }}\r\n    />\r\n)\r\nconst StyledIconURL = styled(IconFont)`\r\n        font-size: 15;\r\n        &:hover {\r\n            color: #007991;\r\n        }\r\n    `;\r\nexport const Url = ({ title, href }: { title: string, href?: string }) => {\r\n    // const [hover, setHover] = useState(false)\r\n    return (\r\n        <Tooltip title={title}>\r\n            <a href={href || ''} rel=\"noopener noreferrer\" target='_blank'>\r\n                <StyledIconURL type='iconURL' />\r\n            </a>\r\n        </Tooltip>\r\n    )\r\n}\r\nconst StyledIconGit = styled(GithubOutlined)`\r\n        font-size: 15;\r\n        &:hover {\r\n            color: #007991;\r\n        }\r\n    `;\r\nexport const Repo = ({ title, href }: { title: string, href?: string }) => {\r\n    // const [hover, setHover] = useState(false)\r\n    return (\r\n        <Tooltip title={title}>\r\n            <a href={href || ''} rel=\"noopener noreferrer\" target='_blank'>\r\n                <StyledIconGit />\r\n            </a>\r\n        </Tooltip>\r\n    )\r\n}\r\nconst StyledIconY = styled(YoutubeOutlined)`\r\n        font-size: 15;\r\n        &:hover {\r\n            color: #007991;\r\n        }\r\n    `;\r\nexport const Youtube = ({ title, href }: { title: string, href?: string }) => {\r\n    // const [hover, setHover] = useState(false)\r\n    return (\r\n        <Tooltip title={title}>\r\n            <a href={href || ''} target='_blank' rel=\"noopener noreferrer\">\r\n                <StyledIconY />\r\n            </a>\r\n        </Tooltip>\r\n    )\r\n}","export const data = {\r\n    name: \"Nicolás Parra Ramos\",\r\n    university: \"Universidad Nacional de Colombia\",\r\n    cerificate: \"Ingeniero de sistemas y computación\",\r\n    phone: '(+57) 3213326683',\r\n    email: 'niparrara@gmail.com',\r\n    repository: 'https://github.com/NicolasPrr',\r\n    linkedin: 'https://www.linkedin.com/in/nicol%C3%A1s-parra-ramos-366910140/',\r\n    src: 'https://media-exp1.licdn.com/dms/image/C5603AQEbgGX19uyK1A/profile-displayphoto-shrink_200_200/0?e=1608768000&v=beta&t=98XwweCJkXtFDaQRLM666tX9zGbVGkaIhL85nMCNWQI',\r\n    about: `Tengo experiencia en desarrollo de paginas web  desde el 2017 y aplicaciones nativas desde el 2019.`\r\n}\r\n\r\nexport interface TLanguage {\r\n    name: string,\r\n    frameworks: string[],\r\n    experience: string,\r\n}\r\nexport interface TIdiom {\r\n    name: string,\r\n    level: string,\r\n}\r\nexport const idiomList: TIdiom[] = [\r\n    { name: 'Inglés', level: 'B1' }\r\n]\r\nexport type ProjectItem = {\r\n    title: string,\r\n    description: string,\r\n    dates: string,\r\n    src: string[],\r\n    libraries?: string[],\r\n    url?: string,\r\n    repo?: string,\r\n    youtube?: string,\r\n}\r\nexport const projectData: ProjectItem[] = [\r\n    {\r\n        title: 'Proyecto de vigilancia cientifica HORUS',\r\n        description: `Horus recopila información desde distintas fuentes como Scopus y ResearchGate \\\r\n            la información de los docentes de la Universidad Nacional de Colombia, publicaciones, temas trabajados y las relaciones entre \\\r\n            ellos se pueden visualizar  gracias a esta herramienta.`,\r\n        dates: 'Febrero 2020 - Octubre 2020 ',\r\n        src: [\r\n\r\n            'https://drive.google.com/uc?id=1z0rBa3jwDYQ9JuIvzkaN2Ft3FZGRzldb',\r\n            'https://drive.google.com/uc?id=1AT2jfAoZ59fsm9gsxzPAtcRTLRxS4eS_',\r\n            'https://drive.google.com/uc?id=10TaKl426VaX132tJyAw3AXzWid0H0e5D',\r\n            'https://drive.google.com/uc?id=1LP5b478TljnHOXLscKWOIg9lq0_Y-r5r',\r\n            'https://drive.google.com/uc?id=1Oh0gJWpVIrGwEj_J6jrrY9fbjaHtLoAa',\r\n        ],\r\n        url: 'https://horus.unal.edu.co',\r\n        // youtube: 'https://horus.unal.edu.co',\r\n        libraries: ['React', 'Ant design', 'FlexBox', 'BizCharts', 'Styled components', 'Redux']\r\n\r\n    },\r\n    {\r\n        title: 'Proyecto Telemedicina UN',\r\n        description: `\r\n        Sistema de información del hospital  universitario para el seguimiento de pacientes que requieren cuidados intensivos en regiones que no cuentan\r\n        con personal médico capacitado para el manejo de las UCI, además el sistema permite a través de chat y videollamada (WebRTC) al personal médico de Bogota \r\n        dar asesoría a los demás profesionales de la salud no capacitados.\r\n        El sistema cuenta con una serie de roles como administrador, médico telecentro, médico telenodo, administrador de hospital y EPS.`,\r\n        dates: 'Agosto 2020 - Octubre 2020 ',\r\n        src: [\r\n            'https://drive.google.com/uc?id=1KRyJjVdIgkEOqVXCKPgAQm5ggMlJ9f9R',\r\n            'https://drive.google.com/uc?id=1osHD6jXzGxHz14aROVQjUZbABv7v7UxF',\r\n            'https://drive.google.com/uc?id=1Ux_xo8YMg01CE3Ipt_RSJvHV80CgkwT4',\r\n        ],\r\n        libraries: ['React TS', 'Ant design', 'FlexBox', 'ant charts', 'Styled components', 'Redux', 'WebRTC', 'Nestjs', 'MongoDB']\r\n\r\n    },\r\n    {\r\n        title: 'Sistema de reportes',\r\n        description: `\r\n            El sistema de reportes desarrollada para la empresa Gusing permite llevar un control con formularios dinamicos para la creacion de reportes\r\n            de emvase de distintos productos, el sistema tiene un manejo de roles y usuarios, tambien cuenta con la posibilidad de \r\n            sacar backup dinamicos desde la interfaz grafica.\r\n        `,\r\n        dates: 'Enero 2019 - septiembre 2019',\r\n        src: [\r\n            'https://drive.google.com/uc?id=1Y3NpM83vo7W4jdleyZy8jxhEagww08CH',\r\n            'https://drive.google.com/uc?id=10D3Wc3KOlNiizLMzqDNAtMRZGBEbXSMN',\r\n            'https://drive.google.com/uc?id=15h2add2CfHq6_pGUyIOISXirZvSWOrWh',\r\n            'https://drive.google.com/uc?id=1Oi0hCA4Sub2W4cXjz-ZXfyPRmgebjtCq',\r\n        ],\r\n        libraries: ['React', 'bulma', 'FlexBox', 'PostgreSQL', 'Ruby On Rails']\r\n\r\n    },\r\n    {\r\n        title: 'SIA Dashboard',\r\n        description: `\r\n        El objetivo de la aplicación es poder calcular de manera dinámica los promedios usados en la universidad tales como el PAPA, PA y PAPPI, la página \r\n        tiene la capacidad de hacer el resumen de la historia académica de cada estudiante de la universidad siempre y cuando el estudiante de los datos,\r\n        la pagina guarda la información en el navegador para asegurar la persistencia de los datos.\r\n        `,\r\n        dates: 'Marzo 2019 - Febrero 2020',\r\n        src: [\r\n            'https://drive.google.com/uc?id=11F97F0AzPun8R2pkH2xrjlnAkT_oCVyz',\r\n            'https://drive.google.com/uc?id=1knKUr2QoLPGLHL5xo2e_5mC7DLqGrbum',\r\n            'https://drive.google.com/uc?id=1IKdRhKZYtbfPZXG4CTuyqb-n5lamDuka',\r\n            'https://drive.google.com/uc?id=1Q4uxxHht4f-KG5lZakuG7h6OdOAnRT4m',\r\n        ],\r\n        youtube: 'https://www.youtube.com/watch?v=wTrKv_X4d0A',\r\n        url: 'https://nicolasprr.github.io/DashBoardSIA/',\r\n        repo: 'https://github.com/NicolasPrr/DashBoardSIA',\r\n        libraries: ['React', 'Ant design', 'Redux', 'BizCharts']\r\n\r\n\r\n    },\r\n]\r\n\r\nexport type iconTypes = 'university' | 'job' | 'finish' | 'airplane' | 'prize' | 'certificate'\r\n\r\nexport interface ItemTime {\r\n    type: iconTypes\r\n    text: string,\r\n}\r\nexport const timeList: ItemTime[] = [\r\n    {\r\n        type: \"university\",\r\n        text: `2014/08 - Inicio pregrado Universidad Nacional`\r\n    },\r\n    {\r\n        type: \"prize\",\r\n        text: `2017/10 - IronHacks Purdue`\r\n\r\n    },\r\n    {\r\n        type: \"job\",\r\n        text: `2019/01 - Inicio proyecto de sistema de reportes`\r\n    },\r\n    {\r\n        type: \"finish\",\r\n        text: `2019/09 - Finalizacion del proyecto del sistema de reportes`\r\n    },\r\n    {\r\n        type: \"job\",\r\n        text: `2020/02 - Estudiante auxiliar para la plataforma HORUS`\r\n\r\n    },\r\n    {\r\n        type: \"finish\",\r\n        text: `2020/08 - Finalizacion del contrato de la plataforma HORUS`\r\n\r\n    },\r\n    {\r\n        type: \"job\",\r\n        text: `2020/08 - Contratacion estudiante auxiliar Para teleUCI`\r\n\r\n    },\r\n    {\r\n        type: \"finish\",\r\n        text: `2020/10 - Finalizacion del contrato  de la plataforma teleUCI`\r\n\r\n    },\r\n    {\r\n        type: \"certificate\",\r\n        text: `2020/10 - Finalizacion estudios de pregrado`\r\n    },\r\n]\r\nexport const languageList: TLanguage[] = [\r\n    {\r\n        name: 'Ruby',\r\n        experience: '6 meses',\r\n        frameworks: ['Ruby On Rails', 'Laravel'],\r\n\r\n    },\r\n    {\r\n        name: 'Javascript',\r\n        frameworks: ['React.js', 'React Native', 'Express'],\r\n        experience: '2 anos',\r\n    },\r\n    {\r\n        name: 'Typescript',\r\n        frameworks: ['Nest.js', 'React'],\r\n        experience: '6 meses',\r\n    },\r\n    {\r\n        name: 'Databases',\r\n        frameworks: ['MySQL', 'MongoDB'],\r\n        experience: '2 años',\r\n    },\r\n    {\r\n        name: 'Python',\r\n        frameworks: ['Tensorflow', 'Keras'],\r\n        experience: '2 años',\r\n    },\r\n    {\r\n        name: 'VBA',\r\n        frameworks: ['Macros excel'],\r\n        experience: '1 año ',\r\n    },\r\n]","import React from 'react'\r\nimport { Avatar, Typography, Divider, Space } from 'antd'\r\nimport styled from 'styled-components'\r\nimport { LinkedinOutlined, createFromIconfontCN, PhoneOutlined, GithubOutlined } from \"@ant-design/icons\";\r\nimport DynamicTags from './DynamicTag'\r\nimport { Idiom, Coding } from './Icons'\r\n\r\nimport { Card } from './index'\r\n\r\nimport { data, languageList, idiomList } from '../variables'\r\n\r\nconst IconFont = createFromIconfontCN({\r\n    scriptUrl: [\r\n        '//at.alicdn.com/t/font_2142157_hvnclfs5q2t.js'\r\n    ],\r\n});\r\nexport const University = () => (\r\n    <IconFont type='iconuniversity1'\r\n        style={{ fontSize: 20 }}\r\n    />\r\n)\r\nexport const Certificate = () => (\r\n    <IconFont type='iconcertificate'\r\n        style={{ fontSize: 20 }}\r\n    />\r\n)\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 20px;\r\n    \r\n`;\r\nconst Row = styled.div`\r\n    display: flex;\r\n    flex-wrap:  wrap ;\r\n    justify-content: space-between;\r\n\r\n`;\r\n\r\nconst AvatarContent = () => (\r\n    <Card>\r\n        <Wrapper>\r\n            <Avatar\r\n                src={data.src}\r\n                size={125}\r\n            />\r\n            <Typography.Title level={5}>\r\n                {data.name}\r\n            </Typography.Title>\r\n            <Space direction='vertical' align='start'  >\r\n                <Typography.Text>\r\n                    <Certificate />{data.cerificate}\r\n                </Typography.Text>\r\n                <Typography.Text>\r\n                    <University /> {data.university}\r\n                </Typography.Text>\r\n                <Typography.Text>\r\n                    <PhoneOutlined style={{ fontSize: 20 }} /> {data.phone}\r\n                </Typography.Text>\r\n                <Typography.Link href={data.repository} target='_blank' >\r\n                    <GithubOutlined style={{ fontSize: 20 }} /> Perfil GitHub\r\n            </Typography.Link>\r\n                <Typography.Link href={data.linkedin} target='_blank' >\r\n                    <LinkedinOutlined style={{ fontSize: 20 }} /> Linkedin\r\n            </Typography.Link>\r\n\r\n            </Space>\r\n            <Divider dashed style={{ fontSize: '11px' }} > <Coding /> Lenguajes</Divider>\r\n            <Row>\r\n                <DynamicTags data={languageList}  type='language' />\r\n            </Row>\r\n            <Divider dashed style={{ fontSize: '11px' }} > <Idiom /> Idiomas</Divider>\r\n            <Row>\r\n                <DynamicTags data={idiomList} />\r\n            </Row>\r\n        </Wrapper>\r\n    </Card>\r\n\r\n)\r\nexport default AvatarContent\r\n","import React from 'react'\r\nimport { Timeline } from 'antd'\r\nimport styled from 'styled-components'\r\nimport { Card } from './index'\r\nimport { University, Airplane, Job, Certificate } from './Icons'\r\n\r\nimport { CheckOutlined, TrophyOutlined } from '@ant-design/icons'\r\nimport {iconTypes, timeList} from '../variables'\r\n\r\n\r\ntype dictType<T extends string, K>  = Record<T, K>\r\n\r\nconst dict: dictType<iconTypes, React.ReactNode> ={\r\n    airplane: <Airplane/>,\r\n    certificate: <Certificate/>,\r\n    finish: <CheckOutlined/>,\r\n    job: <Job/>,\r\n    prize: <TrophyOutlined/>,\r\n    university: <University/>,\r\n}\r\n\r\n\r\n\r\nconst { Item } = Timeline\r\nconst Wrapper = styled.div`\r\n    align-items: center;\r\n    padding: 20px;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nconst Time = () => {\r\n    return (\r\n        <Card>\r\n            <Wrapper>\r\n            <Timeline mode='left' reverse={true} >\r\n                {timeList.map( item =>(\r\n                        <Item key={item.text} dot={dict[item.type]}>{item.text}</Item>\r\n                    ) )}\r\n            </Timeline>\r\n            </Wrapper>\r\n        </Card>\r\n    )\r\n}\r\nexport default Time","import React from 'react'\r\nimport styled from 'styled-components'\r\nconst Wrapper = styled.div`\r\n    width: 95%;\r\n    background-color: white;\r\n    box-shadow:  3px 3px 9px 6px #ccc;\r\n    border-radius: 7px;\r\n    margin: 12px 0 0 0 ;\r\n`;\r\n\r\n\r\ndeclare type CardProps  = {\r\n    children: React.ReactNode\r\n}\r\n\r\nconst Card = ({ children }: CardProps) => {\r\n    return (\r\n        <Wrapper>\r\n            {children}\r\n        </Wrapper>\r\n    )\r\n\r\n}\r\n\r\nexport const WrapperIns = styled.div`\r\n    align-items: center;\r\n    padding: 20px;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport default Card","import React from 'react'\r\n\r\nimport { Card, WrapperIns } from './index'\r\nimport {Typography, Divider} from 'antd'\r\n\r\ntype Props ={\r\n    title: string,\r\n    children: string | React.ReactNode,\r\n\r\n}\r\nconst Description = ({title, children}: Props) => {\r\n\r\n    return (\r\n        <Card>\r\n            <WrapperIns>\r\n                <Typography.Title level={5}>\r\n                    {title}\r\n                </Typography.Title>\r\n                <Divider/>\r\n                <Typography.Text>\r\n                    {children}\r\n                </Typography.Text>\r\n            </WrapperIns>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Description","import { ILayoutImage } from \"./Interfaces\"\r\n\r\nexport const getRows = (i: number) => {\r\n    return Math.floor((i + 1) / 2) + 1\r\n}\r\nexport const getColumns = (i: number) => {\r\n    return Math.floor((i + 2) / 2) + 1\r\n}\r\nexport const fragmentString = (ammount: number): string => {\r\n    // console.log({ ammount })\r\n    let strAcum: string = ''\r\n    let fibo = [0, 1, 1]\r\n\r\n    for (let i = 0; i < ammount; i++) {\r\n        strAcum = strAcum + `${1 / Math.pow(2, i)}fr `\r\n        const lastOne = fibo.length -1\r\n        fibo.push(fibo[lastOne] + fibo[lastOne - 1] )\r\n    }\r\n    // console.log('fr:', fibo.reverse().slice(0, ammount).join('fr ') + 'fr')\r\n    // console.log(strAcum)\r\n    return strAcum\r\n    // return fibo.reverse().slice(0, ammount).join('fr ') + 'fr'\r\n}\r\nexport const buildGrid = (data: any): ILayoutImage[] => {\r\n    const n = data.src.length\r\n    const rows = getRows(n)\r\n    const columns = getColumns(n)\r\n    // console.log({n})\r\n    // console.log({rows, columns})\r\n    // let i = 0\r\n    let cssGrid = []\r\n    let rCounter = 2\r\n    for (let i = 0; i < n; i++) {\r\n        if (i % 2 === 0) {\r\n            const strRow = `${getRows(i - 1)}/${rows}`\r\n            const strCol = `${getColumns(i - 1)}/${rCounter}`\r\n            // console.log('r',i , strRow, 'C', strCol )\r\n            cssGrid.push({ row: strRow, column: strCol })\r\n        } else {\r\n            const strRow = `${getRows(i - 1)}/${rCounter}`\r\n            const strCol = `${getColumns(i - 1)}/${columns}`\r\n            // console.log('r',i , strRow, 'C', strCol)\r\n            cssGrid.push({ row: strRow, column: strCol })\r\n            rCounter++\r\n        }\r\n    }\r\n    return cssGrid\r\n}","import styled from 'styled-components'\r\nimport { IpropsContainer, IpropsItem } from './Interfaces'\r\nimport { fragmentString, getColumns, getRows } from './helpers'\r\nconst [dWidth, dHeight] = ['300px', '200px'];\r\nexport const Container = styled.div<IpropsContainer>`\r\n   display: grid;\r\n   grid-template-rows: ${props => fragmentString(getRows(props.boxes) - 1)};\r\n   grid-template-columns: ${props => fragmentString(getColumns(props.boxes) - 1)};\r\n   /* width: ${dWidth};  */\r\n   width: 100%; \r\n   /* height: 100%; */\r\n   max-height: ${dHeight};\r\n   max-width: ${props => {\r\n       return !props.full ? '100%' : dWidth\r\n       }};\r\n`;\r\n\r\n\r\nexport const ItemImage = styled.div<IpropsItem>`\r\n    cursor: pointer;\r\n    transition: all 0.5s ease;\r\n    padding: 2px;\r\n    grid-row: ${props => props.grid.row};\r\n    grid-column: ${props => props.grid.column};\r\n    &:hover {\r\n        background-color: #264653;\r\n    } ;\r\n`;","import React from 'react'\r\nimport { List, Image, Tag, Divider, Grid } from 'antd'\r\nimport { Url, Repo, Youtube } from './Icons'\r\nimport { Container, ItemImage } from './FiboImage'\r\nimport { buildGrid } from './FiboImage/helpers'\r\nimport { projectData } from '../variables'\r\n\r\nconst { useBreakpoint } = Grid\r\n\r\n\r\nconst ProjectList = () => {\r\n    const screens = useBreakpoint()\r\n    const allowInExtra = screens['md'] \r\n    // console.log({ screens, allow: allowInExtra })\r\n    return (\r\n        <List\r\n            size='large'\r\n            itemLayout='vertical'\r\n            dataSource={projectData}\r\n            renderItem={item => {\r\n                const actions = []\r\n                item.url && actions.push(<Url title='Ir al proyecto' href={item.url} />)\r\n                item.repo && actions.push(<Repo title='Ir al repositorio' href={item.repo} />)\r\n                item.youtube && actions.push(<Youtube title='Ir a video' href={item.youtube} />)\r\n\r\n                return (\r\n                    <List.Item\r\n                        actions={actions}\r\n                        style={{ padding: 20 }} extra={\r\n                            <>\r\n                            {allowInExtra && <Container boxes={item.src.length} full={allowInExtra} >\r\n                                {Object.keys(item.src).map((key) => {\r\n                                    const keyInt = parseInt(key)\r\n                                    const grid = buildGrid(item)\r\n                                    return (<React.Fragment key={key}>\r\n                                        {grid[keyInt] && <ItemImage grid={grid[keyInt]} key={key} >\r\n                                            <Image\r\n                                                style={{ objectFit: 'cover' }}\r\n                                                // width={'100%'}\r\n                                                height={'100%'}\r\n                                                src={item.src[keyInt]}\r\n                                            />\r\n                                        </ItemImage>\r\n                                        }\r\n                                    </React.Fragment>\r\n                                    )\r\n\r\n\r\n                                })}\r\n                            </Container>}\r\n                            </>    \r\n\r\n                        }\r\n                    >\r\n\r\n                        <List.Item.Meta description={item.dates} key={item.title} title={item.title} />\r\n                        {item.description}\r\n                        {item?.libraries && item.libraries.length > 0 && <Divider orientation='left' style={{ fontSize: 13 }}>Herramientas</Divider>}\r\n                        {item.libraries?.map(lib => <Tag key={lib}>{lib}</Tag>)}\r\n                        {!allowInExtra && <Container boxes={item.src.length} >\r\n                                {Object.keys(item.src).map((key) => {\r\n                                    const keyInt = parseInt(key)\r\n                                    const grid = buildGrid(item)\r\n                                    return (<React.Fragment key={key}>\r\n                                        {grid[keyInt] && <ItemImage grid={grid[keyInt]} key={key} >\r\n                                            <Image\r\n                                                style={{ objectFit: 'cover' }}\r\n                                                // width={'100%'}\r\n                                                height={'100%'}\r\n                                                src={item.src[keyInt]}\r\n                                            />\r\n                                        </ItemImage>\r\n                                        }\r\n                                    </React.Fragment>\r\n                                    )\r\n\r\n\r\n                                })}\r\n                            </Container>}\r\n                    </List.Item>\r\n\r\n                )\r\n            }}\r\n        />\r\n    )\r\n}\r\nexport default ProjectList","import React from 'react';\nimport './App.less';\n\nimport { ListProject ,AvatarContent, Time, Description } from './components'\n\nimport { Layout, Row, Col } from 'antd'\n\nimport { data,} from './variables'\n\n\n\nconst { Content, Header } = Layout\n\n\n\nconst App = () => {\n  return (\n    <Layout>\n      <Header style={{ background: '#fff', boxShadow: '3px 3px 5px 6px #ccc', height: 35 }} />\n      <Content style={{padding: '10px'}}>\n        <Row>\n          <Col xs={24}  sm={24} md={6} >\n            <AvatarContent />\n            <Time />\n          </Col>\n          <Col sm={24} xs={24}  md={18}>\n            <Description title='Acerca de mi'>\n                {data.about}\n            </Description>\n\n            <Description title='Proyectos'>\n              <ListProject/>\n            </Description>\n          </Col>\n        </Row>\n      </Content>\n    </Layout>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}